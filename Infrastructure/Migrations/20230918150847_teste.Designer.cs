// <auto-generated />
using System;
using Infrastructure.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230918150847_teste")]
    partial class teste
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("DBCadDev")
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.AuthEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Auth", "DBCadDev");

                    b.HasData(
                        new
                        {
                            Id = new Guid("153da047-6824-482f-8c18-be28bc13e2bd"),
                            Active = true,
                            CreatedBy = "f4ccb748-23f6-4694-9790-be6e0209b065",
                            CreatedDate = new DateTime(2023, 9, 18, 12, 8, 46, 780, DateTimeKind.Local).AddTicks(5542),
                            Login = "llanfredi",
                            Nome = "Leandro Lanfredi",
                            Senha = "9N1RJ4v/JxP6S23Lg8STzA=="
                        });
                });

            modelBuilder.Entity("Domain.Entities.DevEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdTipoDev")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoDev");

                    b.ToTable("Dev", "DBCadDev");
                });

            modelBuilder.Entity("Domain.Entities.TipoDevEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescTipoDev")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TipoDev", "DBCadDev");

                    b.HasData(
                        new
                        {
                            Id = new Guid("012623ce-24f0-4d8e-befb-19a84e7f4591"),
                            Active = true,
                            CreatedBy = "09b6813e-664c-412e-bb52-43e07b260294",
                            CreatedDate = new DateTime(2023, 9, 18, 12, 8, 46, 779, DateTimeKind.Local).AddTicks(1741),
                            DescTipoDev = "Estágiário"
                        },
                        new
                        {
                            Id = new Guid("e2d14b1d-8535-4b1a-b9b3-e9f30bab64f5"),
                            Active = true,
                            CreatedBy = "a831b5b0-ace7-45b3-a6f4-ec7c4f351ba3",
                            CreatedDate = new DateTime(2023, 9, 18, 12, 8, 46, 779, DateTimeKind.Local).AddTicks(1820),
                            DescTipoDev = "Júnior"
                        },
                        new
                        {
                            Id = new Guid("8f4327d0-4c8e-43da-a16d-ce7f8737daf0"),
                            Active = true,
                            CreatedBy = "d8721bbb-6b43-4b6c-8388-41518c158a20",
                            CreatedDate = new DateTime(2023, 9, 18, 12, 8, 46, 779, DateTimeKind.Local).AddTicks(1832),
                            DescTipoDev = "Pleno"
                        },
                        new
                        {
                            Id = new Guid("5afc05a1-c49f-48e9-9581-7e61c9c6062c"),
                            Active = true,
                            CreatedBy = "4cb66dd2-7a3a-4758-b96c-5a39dee06fe6",
                            CreatedDate = new DateTime(2023, 9, 18, 12, 8, 46, 779, DateTimeKind.Local).AddTicks(1842),
                            DescTipoDev = "Sênior"
                        },
                        new
                        {
                            Id = new Guid("fc98d66f-b991-4fdf-b1db-4dc38624dd50"),
                            Active = true,
                            CreatedBy = "ba83d389-6a27-4016-92b1-54c6e7f04149",
                            CreatedDate = new DateTime(2023, 9, 18, 12, 8, 46, 779, DateTimeKind.Local).AddTicks(1849),
                            DescTipoDev = "Especialista"
                        });
                });

            modelBuilder.Entity("Domain.Entities.DevEntity", b =>
                {
                    b.HasOne("Domain.Entities.TipoDevEntity", "TipoDev")
                        .WithMany()
                        .HasForeignKey("IdTipoDev")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoDev");
                });
#pragma warning restore 612, 618
        }
    }
}
