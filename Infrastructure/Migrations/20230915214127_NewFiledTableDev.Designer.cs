// <auto-generated />
using System;
using Infrastructure.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230915214127_NewFiledTableDev")]
    partial class NewFiledTableDev
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("DBCadDev")
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.AuthEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Auth", "DBCadDev");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7d3512b7-6179-4283-914d-47f29110facc"),
                            Active = true,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2023, 9, 15, 18, 41, 25, 936, DateTimeKind.Local).AddTicks(4313),
                            Login = "llanfredi",
                            Nome = "Leandro Lanfredi",
                            Senha = "9N1RJ4v/JxP6S23Lg8STzA=="
                        });
                });

            modelBuilder.Entity("Domain.Entities.DevEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdTipoDev")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Dev", "DBCadDev");
                });

            modelBuilder.Entity("Domain.Entities.TipoDevEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescTipoDev")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TipoDev", "DBCadDev");

                    b.HasData(
                        new
                        {
                            Id = new Guid("618d6115-7e38-4c7b-a950-ef7eb8b0410d"),
                            Active = true,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2023, 9, 15, 18, 41, 25, 934, DateTimeKind.Local).AddTicks(6693),
                            DescTipoDev = "Estágiário"
                        },
                        new
                        {
                            Id = new Guid("874e8f79-5035-4a5e-853c-c75ecacebc0d"),
                            Active = true,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2023, 9, 15, 18, 41, 25, 934, DateTimeKind.Local).AddTicks(6733),
                            DescTipoDev = "Júnior"
                        },
                        new
                        {
                            Id = new Guid("73af6b0d-26e9-44e1-adf8-a454a5ef26da"),
                            Active = true,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2023, 9, 15, 18, 41, 25, 934, DateTimeKind.Local).AddTicks(6742),
                            DescTipoDev = "Pleno"
                        },
                        new
                        {
                            Id = new Guid("b2a9da96-a4a1-42e8-a6a5-69eb14d64a44"),
                            Active = true,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2023, 9, 15, 18, 41, 25, 934, DateTimeKind.Local).AddTicks(6748),
                            DescTipoDev = "Sênior"
                        },
                        new
                        {
                            Id = new Guid("d2038d02-7233-42e7-a366-ffdcd796bfa3"),
                            Active = true,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2023, 9, 15, 18, 41, 25, 934, DateTimeKind.Local).AddTicks(6754),
                            DescTipoDev = "Especialista"
                        });
                });

            modelBuilder.Entity("Domain.Entities.DevEntity", b =>
                {
                    b.HasOne("Domain.Entities.TipoDevEntity", "TipoDev")
                        .WithOne()
                        .HasForeignKey("Domain.Entities.DevEntity", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoDev");
                });
#pragma warning restore 612, 618
        }
    }
}
